// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview AI-powered favicon variation generator.
 *
 * - generateFaviconVariations - Generates favicon variations based on a given input favicon.
 * - GenerateFaviconVariationsInput - The input type for the generateFaviconVariations function.
 * - GenerateFaviconVariationsOutput - The return type for the generateFaviconVariations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateFaviconVariationsInputSchema = z.object({
  faviconDataUri: z
    .string()
    .describe(
      "A favicon, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
  numVariations: z
    .number()
    .default(3)
    .describe('The number of variations to generate.'),
});
export type GenerateFaviconVariationsInput = z.infer<
  typeof GenerateFaviconVariationsInputSchema
>;

const GenerateFaviconVariationsOutputSchema = z.object({
  variations: z.array(
    z.object({
      imageDataUri: z
        .string()
        .describe(
          "A variation of the favicon, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
        ),
    })
  ),
});
export type GenerateFaviconVariationsOutput = z.infer<
  typeof GenerateFaviconVariationsOutputSchema
>;

export async function generateFaviconVariations(
  input: GenerateFaviconVariationsInput
): Promise<GenerateFaviconVariationsOutput> {
  return generateFaviconVariationsFlow(input);
}

const generateFaviconVariationsFlow = ai.defineFlow(
  {
    name: 'generateFaviconVariationsFlow',
    inputSchema: GenerateFaviconVariationsInputSchema,
    outputSchema: GenerateFaviconVariationsOutputSchema,
  },
  async (input) => {
    const variations = await Promise.all(
      Array.from({ length: input.numVariations }, async (_, i) => {
        const { media } = await ai.generate({
          model: 'googleai/gemini-2.0-flash-preview-image-generation',
          prompt: [
            {
              media: { url: input.faviconDataUri },
            },
            {
              text: `You are an expert logo and icon designer. Your task is to generate a new, visually appealing favicon based on the provided image.

                Guidelines:
                1.  **Maintain Core Identity:** The generated favicon should retain the core concept or subject of the original image, but not be an exact copy.
                2.  **Create a Distinct Variation:** Introduce significant and creative alterations. This could involve changing the color palette, modifying shapes, simplifying the design, or reinterpreting the concept in a new style (e.g., minimalist, abstract, geometric).
                3.  **Ensure Clarity:** The final design must be clear and recognizable even at very small sizes (e.g., 16x16 pixels). Avoid overly complex details.
                4.  **Square Format:** The output must be a square image.

                For this request, create a unique option. This is Variation #${i + 1}.`,
            },
          ],
          config: {
            responseModalities: ['TEXT', 'IMAGE'],
          },
        });
        return { imageDataUri: media.url };
      })
    );

    return { variations };
  }
);
